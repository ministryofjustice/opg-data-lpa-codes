on:
  workflow_call:
    inputs:
      terraform_path:
        description: 'The name of the terraform paths'
        required: true
        type: string
      workspace:
        description: 'Terraform workspace'
        required: true
        type: string
      image_tag:
        description: 'Image tag to use'
        required: false
        type: string
    secrets:
      aws_access_key_id_actions:
        required: true
      aws_secret_access_key_actions:
        required: true

jobs:
  terraform_workflow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Install AWS Cli
        uses: unfor19/install-aws-cli-action@27d6061dae5d39e89be4d2246824f15e111a7e06

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@a0b6ede12c06dbc21b9ea1f225a4121a2f203c69
        with:
          terraform_version: 1.7.2

      - name: Configure AWS Credentials For Terraform
        uses: aws-actions/configure-aws-credentials@e26e19042832fb823bebedbd411b82b685244c69
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id_actions }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key_actions }}
          aws-region: eu-west-1
          role-duration-seconds: 3600
          role-session-name: OPGLPACodesGithubAction

      - name: Modify openapispec
        run:
          sed -i "s/\"\${allowed_roles}\"/\${allowed_roles}/" lpa-codes-openapi-v1.yml
        working-directory: lambda_functions/v1/openapi

      - name: Terraform Init
        run: terraform init -input=false -upgrade
        working-directory: ./${{ inputs.terraform_path }}

      - name: Terraform Plan
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
          TF_VAR_image_tag: ${{ inputs.image_tag }}
        run: |
          terraform workspace show
          terraform plan -input=false -parallelism=30
        working-directory: ./${{ inputs.terraform_path }}

      - name: Terraform Apply
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
          TF_VAR_image_tag: ${{ inputs.image_tag }}
        run: terraform apply -lock-timeout=300s -input=false -auto-approve -parallelism=30
        working-directory: ./${{ inputs.terraform_path }}
