permissions:
  actions: read
  checks: read
  contents: read
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: write
  statuses: none

on:
  workflow_call:
    inputs:
      tag:
        description: 'Tag for docker image'
        required: true
        type: string
      branch_name:
        description: 'Branch we are on'
        required: true
        type: string
    secrets:
      aws_access_key_id_actions:
        required: true
      aws_secret_access_key_actions:
        required: true

jobs:
  docker_build_scan_push:
    name: Build, Scan and Push Lambdas
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: 'lpa-codes'
            path: 'lambda_functions/v1'
            dockerfile: "Function"
    steps:
      - name: Check out code
        id: checkout_code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id_actions }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key_actions }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/integrations-ci
          role-duration-seconds: 900
          role-session-name: OPGLPACodesGithubAction

      - name: Login to ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registries: 311462405659

      - name: Build Container
        id: build_container
        run: docker build --file ${{ matrix.path }}/Dockerfile-${{ matrix.dockerfile }} --tag ${{ matrix.name }}:latest ${{ matrix.path }}

      - name: Trivy Image Vulnerability Scanner
        id: trivy_scan
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 # 0.32.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TRIVY_DB_REPOSITORY: ${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-db:2
          TRIVY_JAVA_DB_REPOSITORY: ${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-java-db:1
        with:
          image-ref: ${{ matrix.name }}:latest
          severity: 'HIGH,CRITICAL'
          format: 'sarif'
          security-checks: "vuln"
          ignore-unfixed: true
          exit-code: 1
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        id: trivy_upload_sarif
        uses: github/codeql-action/upload-sarif@df559355d593797519d70b90fc8edd5db049e7a2 # v3.29.9
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Install AWS Cli
        uses: unfor19/install-aws-cli-action@f5b46b7f32cf5e7ebd652656c5036bf83dd1e60c # 1.0.8

      - name: Push to ECR
        env:
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
          ECR_REPOSITORY: integrations/${{ matrix.name }}-lambda
          BRANCH_NAME: ${{ inputs.branch_name }}
        run: |
          docker tag ${{ matrix.name }}:latest $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.tag }}
          if [ $BRANCH_NAME == "main" ]; then
            docker tag ${{ matrix.name }}:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          fi
            echo "skipping push for now..."
            docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY
