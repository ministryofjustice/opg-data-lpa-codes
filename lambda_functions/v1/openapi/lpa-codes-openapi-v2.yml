components:
  schemas:
    BaseError:
      properties:
        code:
          title: Code
          type: string
        detail:
          title: Detail
          type: string
        id:
          title: Id
          type: string
        meta:
          $ref: '#/components/schemas/BaseErrorMeta'
        title:
          title: Title
          type: string
      required:
      - code
      - title
      title: BaseError
      type: object
    BaseErrorMeta:
      properties:
        x-ray:
          title: X-Ray
          type: string
      required:
      - x-ray
      title: BaseErrorMeta
      type: object
    Error400:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/BaseError'
          title: Errors
          type: array
      required:
      - errors
      title: Error400
      type: object
  securitySchemes:
    sigv4:
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: lpa_codes_mock.apikey_auth
info:
  title: lpa-codes-${environment}
  version: '1.0'
openapi: 3.1.0
paths:
  /v1/healthcheck:
    get:
      description: Checks health of our lambda
      operationId: api.resources.handle_healthcheck
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
      security:
      - sigv4: []
      summary: Healthcheck endpoint
      tags:
      - default
      x-amazon-apigateway-integration:
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            statusCode: '200'
        type: aws_proxy
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.lpa_codes_function_name}/invocations
      x-amazon-apigateway-request-validator: all
servers:
- description: Specify prefix only so service can be used in different environments.
  url: /v1
x-amazon-apigateway-gateway-responses:
  ACCESS_DENIED:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-FORBIDDEN",
        "title":$context.error.messageString, "detail":"Forbidden - The current user
        is forbidden from accessing this data (in this way)", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  API_CONFIGURATION_ERROR:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-API_CONFIGURATION_ERROR",
        "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  AUTHORIZER_CONFIGURATION_ERROR:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-AUTHORIZER_CONFIGURATION_ERROR",
        "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  AUTHORIZER_FAILURE:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-AUTHORIZER_FAILURE",
        "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  BAD_REQUEST_BODY:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INVALIDREQUEST",
        "title":$context.error.messageString, "detail":"$context.error.validationErrorString",
        "meta": {"x-ray": "$context.xrayTraceId"} }}'
  BAD_REQUEST_PARAMETERS:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-BAD_REQUEST_PARAMETERS",
        "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  DEFAULT_4XX:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INVALIDREQUEST",
        "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  DEFAULT_5XX:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-SERVERERROR",
        title":$context.error.messageString, "detail":"Something unexpected happened
        internally", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  EXPIRED_TOKEN:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-EXPIRED_TOKEN",
        "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  INTEGRATION_FAILURE:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INTEGRATION_FAILURE",
        "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  INTEGRATION_TIMEOUT:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INTEGRATION_TIMEOUT",
        "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  INVALID_API_KEY:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INVALID_API_KEY",
        "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  INVALID_SIGNATURE:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INVALID_SIGNATURE",
        "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  MISSING_AUTHENTICATION_TOKEN:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-MISSING_AUTHENTICATION_TOKEN",
        "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  QUOTA_EXCEEDED:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-QUOTA_EXCEEDED",
        "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  REQUEST_TOO_LARGE:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-FILESIZELIMIT",
        "title":$context.error.messageString, "detail":"Payload too large, try and
        upload in smaller chunks", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  RESOURCE_NOT_FOUND:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-NOTFOUND",
        "title":$context.error.messageString, "detail":"That URL is not a valid route,
        or the item resource does not exist", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  THROTTLED:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-THROTTLED",
        "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
  UNAUTHORIZED:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-UNAUTHORISED",
        "title":$context.error.messageString, "detail":"Unauthorised (no current user
        and there should be)", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  UNSUPPORTED_MEDIA_TYPE:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-MEDIA",
        "title":$context.error.messageString, "detail":"Unsupported media type for
        this endpoint", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  WAF_FILTERED:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-WAF_FILTERED",
        "title":$context.error.messageString,"detail": "", "meta": {"x-ray": "$context.xrayTraceId"}
        }}'
x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
